# Import libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

# Sample dataset (You can replace this with a CSV)
data = {
    'YearsExperience': [1.1, 1.3, 1.5, 2.0, 2.2, 2.9, 3.0, 3.2, 3.2, 3.7,
                        3.9, 4.0, 4.0, 4.1, 4.5, 4.9, 5.1, 5.3, 5.9, 6.0],
    'Salary': [39343.00, 46205.00, 37731.00, 43525.00, 39891.00, 56642.00,
               60150.00, 54445.00, 64445.00, 57189.00, 63218.00, 55794.00,
               56957.00, 57081.00, 61111.00, 67938.00, 66029.00, 83088.00,
               81363.00, 93940.00]
}

# Create DataFrame
df = pd.DataFrame(data)

# Features and target
X = df[['YearsExperience']]  # Feature (must be 2D)
y = df['Salary']             # Target

# Split into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create linear regression model
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Predict on test set
y_pred = model.predict(X_test)

# Print model coefficients
print("Intercept:", model.intercept_)
print("Coefficient:", model.coef_[0])

# Predict salary for a specific value (e.g., 5 years experience)
years = 5
predicted_salary = model.predict([[years]])
print(f"Predicted salary for {years} years of experience: ${predicted_salary[0]:.2f}")

# Plotting
plt.scatter(X, y, color='blue', label='Actual Data')
plt.plot(X, model.predict(X), color='red', linewidth=2, label='Regression Line')
plt.xlabel("Years of Experience")
plt.ylabel("Salary")
plt.title("Salary vs Experience")
plt.legend()
plt.show()
